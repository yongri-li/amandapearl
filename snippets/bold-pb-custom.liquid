{{ "https://secure.apps.shappify.com/apps/bundle/generate_bundle.php?shop=" | append: shop.permanent_domain | script_tag }}
<script>
 window.originalSend = XMLHttpRequest.prototype.send
 // native promise only
 !function(t,n,e){n[t]=n[t]||e(),"undefined"!=typeof module&&module.exports?module.exports=n[t]:"function"==typeof define&&define.amd&&define(function(){return n[t]})}("Promise","undefined"!=typeof global?global:this,function(){"use strict";function t(t,n){l.add(t,n),h||(h=y(l.drain))}function n(t){var n,e=typeof t;return null==t||"object"!=e&&"function"!=e||(n=t.then),"function"==typeof n?n:!1}function e(){for(var t=0;t<this.chain.length;t++)o(this,1===this.state?this.chain[t].success:this.chain[t].failure,this.chain[t]);this.chain.length=0}function o(t,e,o){var r,i;try{e===!1?o.reject(t.msg):(r=e===!0?t.msg:e.call(void 0,t.msg),r===o.promise?o.reject(TypeError("Promise-chain cycle")):(i=n(r))?i.call(r,o.resolve,o.reject):o.resolve(r))}catch(c){o.reject(c)}}function r(o){var c,u=this;if(!u.triggered){u.triggered=!0,u.def&&(u=u.def);try{(c=n(o))?t(function(){var t=new f(u);try{c.call(o,function(){r.apply(t,arguments)},function(){i.apply(t,arguments)})}catch(n){i.call(t,n)}}):(u.msg=o,u.state=1,u.chain.length>0&&t(e,u))}catch(a){i.call(new f(u),a)}}}function i(n){var o=this;o.triggered||(o.triggered=!0,o.def&&(o=o.def),o.msg=n,o.state=2,o.chain.length>0&&t(e,o))}function c(t,n,e,o){for(var r=0;r<n.length;r++)!function(r){t.resolve(n[r]).then(function(t){e(r,t)},o)}(r)}function f(t){this.def=t,this.triggered=!1}function u(t){this.promise=t,this.state=0,this.triggered=!1,this.chain=[],this.msg=void 0}function a(n){if("function"!=typeof n)throw TypeError("Not a function");if(0!==this.__NPO__)throw TypeError("Not a promise");this.__NPO__=1;var o=new u(this);this.then=function(n,r){var i={success:"function"==typeof n?n:!0,failure:"function"==typeof r?r:!1};return i.promise=new this.constructor(function(t,n){if("function"!=typeof t||"function"!=typeof n)throw TypeError("Not a function");i.resolve=t,i.reject=n}),o.chain.push(i),0!==o.state&&t(e,o),i.promise},this["catch"]=function(t){return this.then(void 0,t)};try{n.call(void 0,function(t){r.call(o,t)},function(t){i.call(o,t)})}catch(c){i.call(o,c)}}var s,h,l,p=Object.prototype.toString,y="undefined"!=typeof setImmediate?function(t){return setImmediate(t)}:setTimeout;try{Object.defineProperty({},"x",{}),s=function(t,n,e,o){return Object.defineProperty(t,n,{value:e,writable:!0,configurable:o!==!1})}}catch(d){s=function(t,n,e){return t[n]=e,t}}l=function(){function t(t,n){this.fn=t,this.self=n,this.next=void 0}var n,e,o;return{add:function(r,i){o=new t(r,i),e?e.next=o:n=o,e=o,o=void 0},drain:function(){var t=n;for(n=e=h=void 0;t;)t.fn.call(t.self),t=t.next}}}();var g=s({},"constructor",a,!1);return a.prototype=g,s(g,"__NPO__",0,!1),s(a,"resolve",function(t){var n=this;return t&&"object"==typeof t&&1===t.__NPO__?t:new n(function(n,e){if("function"!=typeof n||"function"!=typeof e)throw TypeError("Not a function");n(t)})}),s(a,"reject",function(t){return new this(function(n,e){if("function"!=typeof n||"function"!=typeof e)throw TypeError("Not a function");e(t)})}),s(a,"all",function(t){var n=this;return"[object Array]"!=p.call(t)?n.reject(TypeError("Not an array")):0===t.length?n.resolve([]):new n(function(e,o){if("function"!=typeof e||"function"!=typeof o)throw TypeError("Not a function");var r=t.length,i=Array(r),f=0;c(n,t,function(t,n){i[t]=n,++f===r&&e(i)},o)})}),s(a,"race",function(t){var n=this;return"[object Array]"!=p.call(t)?n.reject(TypeError("Not an array")):new n(function(e,o){if("function"!=typeof e||"function"!=typeof o)throw TypeError("Not a function");c(n,t,function(t,n){e(n)},o)})}),a});
 
 var blackList = ['generate_bundle.php'];
 
 (function blockScripts(blackList){   
   (function(list){
     var observer = new MutationObserver(function(mutations){
       mutations.forEach(function(mutation){
         mutation.addedNodes.forEach(function(node){
           if(node.nodeType === 1 && node.tagName === 'SCRIPT'){
             var src = node.src || '';
             if(isInBlacklist(src)){
               node.type = "javascript/blocked";
               node.addEventListener('beforescriptexecute', function (event) {
                 if(node.getAttribute('type') === 'javascript/blocked')
                   event.preventDefault()
                   node.removeEventListener('beforescriptexecute', beforeScriptExecuteListener)
               });
             }
           }
         });
       });
     });
     observer.observe(document.documentElement, {
       childList: true,
       subtree: true
     });
     function isInBlacklist(src){
       if(list.includes(src) || (list.filter(function(str){
         return src.includes(str);
       }).length > 0)){
         return true;
       }
       return false;
     }
   })(blackList)
     
   document.createElement = (function(list){
     var cached_function = document.createElement;
     return function(list){
       if(arguments[0].toLowerCase() !== 'script'){
         return cached_function.apply(this, arguments);
       }
       var scriptElt = cached_function.apply(this, arguments);
       var originalDescriptors = {
         src: Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'src'),
         type: Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'type')
       }
       Object.defineProperties(scriptElt, {
         'src': {
           set(value) {
             // If we set the source to a blacklisted url, we enforce the right type.
             if(isInBlacklist(value)) {
               scriptElt.type = 'javascript/blocked'
             }
             return originalDescriptors.src.set.call(this, value)
           },
           get() {
             return originalDescriptors.src.get.call(this)
           }
         },
         'type': {
           set(value) {
             return originalDescriptors.type.set.call(
               this,
               isInBlacklist(scriptElt.src)?'javascript/blocked' : value
             )
           },
           get() {
             return originalDescriptors.type.get.call(this)
           }
         }
       })
       scriptElt.setAttribute = function(name, value) {
         if(name === 'type' || name === 'src'){
           scriptElt[name] = value;
         } else{
           HTMLScriptElement.prototype.setAttribute.call(scriptElt, name, value);
         }
       }     
       return scriptElt;
     }
     function isInBlacklist(src){
       if(list.includes(src) || (list.filter(function(str){
         return src.includes(str);
       }).length > 0)){
         return true;
       }
       return false;
     }
   })(blackList);
   
 })(blackList);
  function pbHandleCart(cart){
    XMLHttpRequest.prototype.send = window.originalSend;
    return new Promise(function(resolve, reject){
      if(cart == undefined || cart.items == undefined){
        if(typeof shappify_pb_main == 'function'){
          shappify_pb_main(resolve); 
        } else {
          jQuery.getJSON('/cart.js', resolve); 
        }
      } else {
        if(typeof shappify_pb_got_cart == 'function') {
          shappify_pb_got_cart(cart, function(cart){
            resolve(cart);
          });
        } else {
          resolve(cart); 
        }
      }
    });
  }

  var bold_initial_cart = {{ cart | json }};
  document.documentElement.style.setProperty("visibility", "hidden"); 
  pbHandleCart(bold_initial_cart)
  .then(function afterProcessed(cart) {
    if(window.BOLD
       && BOLD.common
       && BOLD.common.cartDoctor
       && typeof BOLD.common.cartDoctor.fix == 'function'){
      if(BOLD.common.cartDoctor.fix(bold_initial_cart).total_price == BOLD.common.cartDoctor.fix(cart).total_price) {
        document.documentElement.style.setProperty("visibility", "visible");
      } else {
        debugger;
        window.stop();
        location.reload();
      }
    } else {
      document.documentElement.style.setProperty("visibility", "visible");
    }
  })
  .catch(function handleError(){
    console.log(arguments);
    document.documentElement.style.setProperty("visibility", "visible");
  });
   function fragmentFromString(str){
    return document.createRange().createContextualFragment(str);
  }
  window.addEventListener("load", function(){  
    if(window.BOLD
       && BOLD.common
       && BOLD.common.eventEmitter
       && typeof BOLD.common.eventEmitter.emit == 'function'
       && BOLD.common.cartDoctor
       && typeof BOLD.common.cartDoctor.fix == 'function'){
      jQuery.getJSON("/cart.js", function(cart){
      	cart = BOLD.common.cartDoctor.fix(cart);
        BOLD.common.eventEmitter.emit("BOLD_COMMON_cart_loaded", cart);
      
      })
    }
  });
</script>
<style>
  .bold-bundle{
    transform:scale(0.8);
  }
</style>